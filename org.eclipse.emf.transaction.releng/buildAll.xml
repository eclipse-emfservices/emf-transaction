<project default="run">
	
	<target name="init">

	    <!-- common releng helper scripts -->
	    <property name="helper" value="${buildDirectory}/../org.eclipse.modeling.common.releng/scripts/buildAllHelper.xml" />

		<echo message="Set compilerArgs = '-enableJavadoc -encoding ISO-8859-1 -warn:-serial,nls,unchecked,warningToken'"/>
		<property name="compilerArg" value="-enableJavadoc -encoding ISO-8859-1 -warn:-serial,nls,unchecked,warningToken" />

	    <property name="commonScriptsDir" value="${basedir}/../org.eclipse.modeling.common.releng/scripts" />
		
	    <!-- TODO: set correct source and target levels here -->
		<path id="bc">
			<fileset dir="${java.home}/lib">
				<include name="*.jar" />
			</fileset>
		</path>
		<property name="bootclasspath" refid="bc" />

		<property name="buildingOSGi" value="true" />
		<property name="collectingFolder" value="eclipse" />
		<property name="archivePrefix" value="eclipse" />

		<!-- Reduce the amount of info in the build log -->
		<property name="javacVerbose" value="false" />

		<property name="buildDirectory" location="${basedir}/../src/eclipse" />
		<property file="${basedir}/repoInfo.properties" />
		<property name="testBase" location="${buildDirectory}/../testing" />
		<available file="${buildDirectory}/label.properties" property="label.properties.exists" />
    <ant target="create.label.properties" antfile="${helper}" />
		<property file="${buildDirectory}/label.properties" />
		
		<echo message="buildAll.xml properties:"/>
		<echo message="basedir = ${basedir}"/>

		<!-- load a value for ${subprojectName} -->
		<property name="buildConfigFile" value="${basedir}/../build.cfg"/>
		<available file="${buildConfigFile}" type="file" property="buildConfigIsAvailable" />
		<fail message="Can't load build properties from ${buildConfigFile}" unless="buildConfigIsAvailable"/>
		
		<!-- TODO: set any special build-related properties here by echoing them into ${buildConfigFile}:
		<echo file="${buildConfigFile}" append="true">

# extra properties specific to just this build
propertyName=propertyValue
</echo>	-->
		<property file="${buildConfigFile}" />

		<echo message="buildVer = ${buildVer}"/>
		<echo message="subprojectName = ${subprojectName}"/>

		<!-- <echo message="Base OS: ${baseos}; Base Window System: ${basews}"/> -->
		<condition property="isWindows">
			<equals arg1="${baseos}.${basews}" arg2="win32.win32" />
		</condition>
		<condition property="isLinuxGTK">
			<equals arg1="${baseos}.${basews}" arg2="linux.gtk" />
		</condition>
		<condition property="isLinuxMotif">
			<equals arg1="${baseos}.${basews}" arg2="linux.motif" />
		</condition>

	    <!-- required for signing & repackaging master zip into smaller zips -->
	    <property name="masterZip" value="${projectName}-${subprojectName}-Master-${buildAlias}.zip" />
	    <property name="java15-home" value="/opt/sun-java2-5.0" />
	    <property name="stagingHome" value="/home/data/httpd/download-staging.priv" />
	    <property name="projectPath" value="modeling/emf" />
	    <!-- user with write perms in staging dir & permission to run /usr/bin/sign -->
	    <property name="buildServerUser" value="nickb@build.eclipse.org" />
	    <property name="sign" value="true" />
	</target>

	<target name="buildAll">
	    <macrodef name="echo-timestamp">
	      <sequential>
	        <ant target="-timestamp" inheritAll="false" antfile="${helper}" />
	      </sequential>
	    </macrodef>

	    <echo-timestamp />
	    <ant antfile="build.xml" target="main">
	      <property name="component" value="builder/all" />
	    </ant>
		
	    <!-- SDK -->
	    <property name="SDKZip" value="${projectName}-${subprojectName}-SDK-${buildAlias}.zip" />
	    <zip destfile="${buildDirectory}/${buildLabel}/${SDKZip}" update="true">
	      <zipfileset src="${buildDirectory}/${buildLabel}/${masterZip}" dirmode="775" filemode="664" id="SDKZipFiles" excludes="**/features/org.eclipse.*.all*, **/features/org.eclipse.*.all*/**, **/org.eclipse.*.example*, **/org.eclipse.*.example*/**, **/org.eclipse.*.master_*, **/org.eclipse.*.master_*/**, **/*.pack.gz, **/pack.properties, **/features/*.jar, **/plugins/*.source_*.jar" />
	      <zipfileset src="${buildDirectory}/${buildLabel}/${masterZip}" dirmode="775" filemode="664" id="SDKZipFiles2" includes="**/plugins/org.eclipse.emf.transaction.examples_*.jar" />
	    </zip>
		
	    <!-- all-SDK (includes only the 3-1 feature definitions; no nested content) -->
	    <property name="allSDKZip" value="${projectName}-qtv-all-SDK-${buildAlias}.zip" />
	    <zip destfile="${buildDirectory}/${buildLabel}/${allSDKZip}" update="true">
	      <zipfileset src="${buildDirectory}/${buildLabel}/${masterZip}" dirmode="775" filemode="664" id="allSDKZipFiles" includes="**/features/org.eclipse.emf.emfqtv.all*, **/features/org.eclipse.emf.emfqtv.all*/**" excludes="**/*.pack.gz, **/pack.properties, **/features/*.jar, **/plugins/*.source_*.jar" />
		  <zipfileset src="${buildDirectory}/${buildLabel}/${SDKZip}" dirmode="775" filemode="664" id="rootfiles" includes="**/eclipse/epl-v10.html, **/eclipse/notice.html" />
	    </zip>

	    <!-- examples -->
	    <property name="examplesZip" value="${projectName}-${subprojectName}-examples-${buildAlias}.zip" />
	    <zip destfile="${buildDirectory}/${buildLabel}/${examplesZip}" update="true">
	      <zipfileset src="${buildDirectory}/${buildLabel}/${masterZip}" dirmode="775" filemode="664" id="examplesZipFiles" includes="**/org.eclipse.*.example*, **/org.eclipse.*.example*/**" excludes="**/org.eclipse.*.master_*, **/org.eclipse.*.master_*/**, **/*.pack.gz, **/pack.properties, **/features/*.jar, **/plugins/*.source_*.jar" />
	      <zipfileset refid="rootfiles" />
	    </zip>

	  	<!-- tests -->
	    <ant antfile="build.xml" target="main">
	      <property name="component" value="builder/tests" />
	    </ant>

	    <echo-timestamp />
	    <parallel failonany="true">
	      <sequential>
	        <ant target="addFeatureAndPluginJarsToMasterZip" antfile="${helper}" />
			<ant target="signMasterZip" antfile="${helper}">
				<property name="mailStatus" value="nomail" />
			</ant>
	        <ant target="packMasterZip" antfile="${helper}" />
	      </sequential>
	    </parallel>

	    <!-- update w/ signed jars -->
	    <zip destfile="${buildDirectory}/${buildLabel}/${allSDKZip}" update="true">
	      <zipfileset refid="allSDKZipFiles" />
	    </zip>
	    <zip destfile="${buildDirectory}/${buildLabel}/${SDKZip}" update="true">
	      <zipfileset refid="SDKZipFiles" />
	      <zipfileset refid="SDKZipFiles2" />
	    </zip>
	    <zip destfile="${buildDirectory}/${buildLabel}/${examplesZip}" update="true">
	      <zipfileset refid="examplesZipFiles" />
	    </zip>

	    <ant target="removeFeatureAndPluginFoldersFromMasterZip" antfile="${helper}" />

	    <!-- remove .master features -->
	    <zip destfile="${buildDirectory}/${buildLabel}/${masterZip}.tmp" update="true">
	      <zipfileset src="${buildDirectory}/${buildLabel}/${masterZip}" dirmode="775" filemode="664" excludes="**/*emf.transaction.master_*, **/*emf.transaction.master_*/**" />
	    </zip>
	    <move file="${buildDirectory}/${buildLabel}/${masterZip}.tmp" tofile="${buildDirectory}/${buildLabel}/${masterZip}" overwrite="true" />

	    <!-- runtime -->
	    <zip destfile="${buildDirectory}/${buildLabel}/${projectName}-${subprojectName}-runtime-${buildAlias}.zip" update="true">
	      <zipfileset src="${buildDirectory}/${buildLabel}/${SDKZip}" dirmode="775" filemode="664" id="runtimeFiles" excludes="**/org.eclipse.*.example*, **/org.eclipse.*.example*/**, **/org.eclipse.*.sdk*, **/org.eclipse.*.sdk*/**, **/org.eclipse.*.doc*, **/org.eclipse.*.doc*/*, **/org.eclipse.*.source*, **/org.eclipse.*.source*/**, **/*src.zip">
	        <include name="**/org.eclipse.emf.transaction_*" />
	        <include name="**/org.eclipse.emf.transaction_*/**" />
	        <include name="**/org.eclipse.emf.transaction.ui_*" />
	        <include name="**/org.eclipse.emf.transaction.ui_*/**" />
	        <include name="**/org.eclipse.emf.workspace_*" />
	        <include name="**/org.eclipse.emf.workspace_*/**" />
	        <include name="**/org.eclipse.emf.workspace.ui_*" />
	        <include name="**/org.eclipse.emf.workspace.ui_*/**" />
	      </zipfileset>
	      <zipfileset refid="rootfiles" />
	    </zip>

	    <!-- all-runtime (includes only the 3-1 feature definition; no nested content) -->
	    <zip destfile="${buildDirectory}/${buildLabel}/${projectName}-qtv-all-runtime-${buildAlias}.zip" update="true">
	      <zipfileset src="${buildDirectory}/${buildLabel}/${allSDKZip}" dirmode="775" filemode="664" includes="**/org.eclipse.emf.emfqtv.all_*, **/org.eclipse.emf.emfqtv.all_*/**"/>
	      <zipfileset refid="rootfiles" />
	    </zip>

	    <echo-timestamp />
	    <ant target="generateDigests" antfile="${helper}" />
		
	</target>
	
	<!-- main entry points are run, runtestsOnly, runWithoutTest, and buildOnly -->

	<target name="run" depends="init">
		<antcall target="buildAll" />
	    <ant target="test" antfile="${helper}" />
	    <ant target="publish" antfile="${helper}" />
	    <ant target="cleanUp" antfile="${helper}" />
	</target>

	<target name="runTestsOnly" depends="init">
		<delete dir="${buildDirectory}" />
		<mkdir dir="${buildDirectory}/${buildLabel}" />
		<copy todir="${buildDirectory}/${buildLabel}">
			<fileset dir="${buildDirectory}/..">
				<include name="**/*.zip" />
			</fileset>
		</copy>
	    <ant target="test" antfile="${helper}" />
	    <ant target="publish" antfile="${helper}" />
	    <ant target="cleanUp" antfile="${helper}" />
	</target>

	<target name="runWithoutTest" depends="init">
		<antcall target="buildAll" />
	    <ant target="publish" antfile="${helper}" />
	    <ant target="cleanUp" antfile="${helper}" />
	</target>

	<target name="buildOnly" depends="init">
		<antcall target="buildAll" />
	    <ant target="cleanUp" antfile="${helper}" />
	</target>

</project>
