#which (sub)project?
project=transaction

#target to call in test.xml:  runtests-local | runtests-remote
testTarget=runtests-local

#directory on test machine where automated testing framework will be installed
testDir=${testBase}/${buildLabel}

#name of zip file containing automated testing framework and JUnit test plug-ins
testFramework=emf-${project}-automated-tests-${buildAlias}.zip

#directory where test scripts are launched
executionDir=${testDir}/testing

#name of runtime to install and test
runtime=emf-${project}-SDK-${buildAlias}.zip

# leave this blank and it will be generated by genBuildDetails.sh 
javaHome=%%JAVA_HOME%%
vmExecutable=${javaHome}/bin/java

#hack to override unneeded function in releng.basebuilder/plugins/org.eclipse.build.tools/scripts/test.xml
vmUrl=
vmDest=/dev/null
vmInstallExecutable=${vmExecutable}
vmInstallCommand=-version

#eclipse platforms:  win32 | linux.motif | linux.gtk | aix.motif | hpux.motif |solaris.motif
platform=${baseos}.${basews}

#name of file that captures console output from running JUnit plug-in tests
consolelog=${baseos}.${basews}_consolelog.txt

#Works with IBM and Sun JDKs, 1.4+
#name of script to execute
testExecutable=bash

#arguments to $(testExecutable) - .sh script + args
args=${executionDir}/${shell} -vmExecutable ${vmExecutable} -consolelog ${consolelog} -vmFileName ${vmFileName} ${Xflags} ${Dflags} 

#TODO: set vm-specific flags
#Xflags=-Xj9 -Xms256M -Xmx256M
Xflags=-Xms256M -Xmx256M
Dflags=

