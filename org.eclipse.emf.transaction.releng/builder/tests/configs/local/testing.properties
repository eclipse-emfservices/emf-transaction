#which (sub)project?
project=transaction

#target to call in test.xml:  runtests-local | runtests-remote
testTarget=runtests-local

#directory on test machine where automated testing framework will be installed
testDir=${testBase}/${buildLabel}

#name of zip file containing automated testing framework and JUnit test plug-ins
testFramework=emft-${project}-automated-tests-${buildAlias}.zip

#directory where test scripts are launched
executionDir=${testDir}/testing

#name of runtime to install and test
runtime=emft-${project}-SDK-${buildAlias}.zip

# instead of downloading and unpacking the JDK each time, just reuse the symlinked one in /opt/
vmExecutable=/opt/ibm-java2-1.4/jre/bin/java
vmUrl=http://emf.torolab.ibm.com/tools/emf/downloads/dummyJDK.zip
vmDest=/dev/null
vmInstallExecutable=${vmExecutable}
vmInstallCommand=-version

#eclipse platforms:  win32 | linux.motif | linux.gtk | aix.motif | hpux.motif |solaris.motif
platform=${baseos}.${basews}

#name of file that captures console output from running JUnit plug-in tests
consolelog=${baseos}.${basews}_consolelog.txt

#Works with IBM and Sun JDKs, 1.4+
#name of script to execute
testExecutable=bash

#arguments to $(testExecutable) - .sh script + args
args=${executionDir}/${shell} -vmExecutable ${vmExecutable} -consolelog ${consolelog} -vmFileName ${vmFileName} ${Xflags} ${Dflags} 

#Ant property to set if vm installation not required; comment out to skip this step
doVmInstall=true

#extra vm flags
Xflags=-Xj9 -Xms256M -Xmx256M
Dflags=

#the following should be updated by start.sh with every test set run for a given build, if we're doing runTestsOnly 
#emf.test.testOnlyTimeStamp= #something like 200504191900

#-----------------


