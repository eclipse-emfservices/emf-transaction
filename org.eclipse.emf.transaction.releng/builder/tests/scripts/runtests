#!/bin/sh

# by default, use the java executable on the path
vm=java

#this value must be set when using rsh to execute this script, otherwise the script will execute from the user's home directory
dir=.

# operating system, windowing system and architecture variables
os=
ws=
arch=

# default classpath - can be overridden by relengbuildgtk.sh
cp="eclipse/startup.jar";

# list of tests (targets) to execute in test.xml
tests=

# default value to determine if eclipse should be reinstalled between running of tests
installmode="clean"

# name of a property file to pass to Ant
properties=

# message printed to console
usage="usage: $0 -os <osType> -ws <windowingSystemType> -arch <architecture> [-noclean] [<test target>][-properties <path>]"

# proces command line arguments
while [ $# -gt 0 ]
do
	case "$1" in
		-project) project="$2"; shift;;
		-dir) dir="$2"; shift;;
		-os) os="$2"; shift;;
		-ws) ws="$2"; shift;;
		-arch) arch="$2"; shift;;
		-noclean) installmode="noclean";;
		-properties) properties="-propertyfile $2";shift;;
		-vm) vm="$2";shift;;
		-cp) cp="$2";shift;;
		-X*) Xflags=$Xflags\ $1;;
		-D*) Dflags=$Dflags\ $1;;
	esac
	shift
done

# for *nix systems, os, ws and arch values must be specified
if [ "x$os" = "x" ]
then
	echo >&2 "$usage"
	exit 1
fi

if [ "x$ws" = "x" ]
then
	echo >&2 "$usage"
	exit 1
fi

if [ "x$arch" = "x" ]
then
	echo >&2 "$usage"
	exit 1
fi

execCmd () 
{
	echo ""; echo "[runtests] [`date +%H\:%M\:%S`]"; 
	for c in $1; do echo "  "$c; echo -n "  "; done; echo "";
	$1;
}

#necessary when invoking this script through rsh
cd $dir
workspaceDir="$dir/eclipse/workspace"

# verify os, ws and arch values passed in are valid before running tests
if [ "$os-$ws-$arch" = "linux-motif-x86" ] || [ "$os-$ws-$arch" = "linux-gtk-x86" ] || [ "$os-$ws-$arch" = "solaris-motif-sparc" ] || [ "$os-$ws-$arch" = "aix-motif-sparc" ] || [ "$os-$ws-$arch" = "hpux-motif-ppc" ] || [ "$os-$ws-$arch" = "qnx-photon-x86" ]
then
	# Replace the boot eclipse (The eclipse used to run the main test.xml, this will start another eclipse later)
	if [ -d $dir/eclipse ] ; then
		rm -rf $dir/eclipse
	fi
	if [ -d $workspaceDir ] ; then
		rm -rf $dir/workspace
	fi

	echo "[runtests] Currently in `pwd`:"
	# need conditional processing here: M3.0.2 = zip, I3.1.0 = tar.gz
	sdks=`find $dir -name "eclipse-SDK-*"`
	# get extension from file(s)
	for sdk in $sdks; do
		sdk="eclipse"${sdk##*eclipse}; # trim up to eclipse (substring notation)
		echo -n "[runtests] Eclipse SDK $sdk is a";
		ext=${sdk%%\.zip}; # trim off .zip (substring notation)
		if [ "$ext" != "$sdk" ]; then # it's a zip
			echo " zip. Unpacking...";
			unzip -qq -o $sdk
		else
			ext=${sdk%%\.tar\.gz}; # trim off .tar.gz (substring notation)
			if [ "$ext" != "$sdk" ]; then # it's a tar.gz
				echo " tar.gz. Unpacking...";
				tar -xzf $sdk
			else
				ext=${sdk%%\.tar\.Z}; # trim off .tar.Z (substring notation)
				if [ "$ext" != "$sdk" ]; then # it's a tar.Z
					echo " tar.Z. Unpacking...";
					tar -xZf $sdk
				else
					echo "n UNKNOWN file type. Script aborting!";
					exit 2
				fi
			fi
		fi
	done

	# run tests
	echo "[runtests] [`date +%H\:%M\:%S`] Launching Eclipse (installmode = $installmode with -enableassertions turned on) ..."
	execCmd "$vm $Xflags -enableassertions -cp $cp org.eclipse.core.launcher.Main -noupdate -ws $ws -os $os -arch $arch -application org.eclipse.ant.core.antRunner -data $workspaceDir -file test.xml $Dflags -Dws=$ws -Dos=$os -Darch=$arch -D$installmode=true $properties -logger org.apache.tools.ant.DefaultLogger";
	echo "[runtests] [`date +%H\:%M\:%S`] Eclipse test run completed. "
	
	# display message to user if os, ws and arch are invalid
	else
		echo "The os, ws and arch values are either invalid or are an invalid combination"
	
	exit 1
fi
