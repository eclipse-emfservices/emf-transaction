<project name="Build specific targets and properties" default="noDefault" basedir=".">

	<property name="sdkZipName" value="emf-qtv-all-SDK-${buildAlias}.zip" />
	<property name="rtZipName" value="emf-qtv-all-runtime-${buildAlias}.zip" />
	
	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- ===================================================================== -->
	<target name="allElements">
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.eclipse.emf.emfqtv.all.sdk" />
		</ant>
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.eclipse.emf.emfqtv.all" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Targets to assemble the built elements for particular configurations  -->
	<!-- These generally call the generated assemble scripts (named in -->
	<!-- ${assembleScriptName}) but may also add pre and post processing -->
	<!-- Add one target for each root element and each configuration -->
	<!-- ===================================================================== -->

	<target name="assemble.org.eclipse.emf.emfqtv.all.sdk">
		<ant antfile="${assembleScriptName}">
			<property name="archiveName" value="${sdkZipName}" />
		</ant>			
		<!-- ADD POST STEPS -->
	</target>

	<target name="assemble.org.eclipse.emf.emfqtv.all">
		<ant antfile="${assembleScriptName}">
			<property name="archiveName" value="${rtZipName}" />
		</ant>			
		<!-- ADD POST STEPS -->
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for cvsRoot, package and mapVersionTag as desired. -->
	<!-- ===================================================================== -->
	<target name="checkLocal">
		<available property="mapsLocal" file="${buildDirectory}/maps" />
	</target>

	<target name="getMapFiles" depends="checkLocal" unless="mapsLocal">

		<!-- ***  change the repo info -->
		<property name="mapCvsRoot" value=":${cvsReadProtocol}:${cvsReadUser}@${cvsHost}:${cvsRep}" />

		<property name="mapVersionTag" value="HEAD" />
		<property name="packagePath" value="org.eclipse.${projectName}/org.eclipse.${subprojectName}.releng/maps"/>

		<cvs cvsRsh="ssh" cvsRoot="${mapCvsRoot}" tag="${mapVersionTag}" 
			package="${packagePath}" dest="${buildDirectory}/maps" />
		<copy todir="${buildDirectory}/maps/CVS" overwrite="true">
			<fileset dir="${buildDirectory}/maps/${packagePath}/CVS" />
		</copy>
		<copy todir="${buildDirectory}/maps" overwrite="true">
			<fileset dir="${buildDirectory}/maps/${packagePath}" />
		</copy>
		<delete dir="${buildDirectory}/maps/org.eclipse.${projectName}" />

		<!--tag the map files project-->
		<antcall target="tagMapFiles" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs cvsRsh="ssh" dest="${buildDirectory}/maps" command="tag v${timestamp}" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<echo message="Download, then unpack: EMF SDK, Eclipse SDK, Query"/>
		<ant target="getDependency" antfile="${buildDirectory}/../org.eclipse.modeling.common.releng/scripts/getDependencies.xml">
			<property name="url" value="${emfURL}"/>
			<property name="file" value="${emfFile}"/>
			<property name="isUnpackedFile" value="${buildDirectory}/plugins/org.eclipse.emf.ecore/plugin.xml"/>
		</ant>
		<ant target="getDependency" antfile="${buildDirectory}/../org.eclipse.modeling.common.releng/scripts/getDependencies.xml">
			<property name="url" value="${eclipseURL}"/>
			<property name="file" value="${eclipseFile}"/>
			<property name="isUnpackedFile" value="${buildDirectory}/plugins/org.eclipse.platform.doc.isv/plugin.xml" />
		</ant>
		<ant target="getDependency" antfile="${buildDirectory}/../org.eclipse.modeling.common.releng/scripts/getDependencies.xml">
			<property name="url" value="${queryURL}"/>
			<property name="file" value="${queryFile}"/>
			<property name="isUnpackedFile" value="${buildDirectory}/plugins/org.eclipse.emf.query/META-INF/MANIFEST.MF" />
		</ant>
		<ant target="getDependency" antfile="${buildDirectory}/../org.eclipse.modeling.common.releng/scripts/getDependencies.xml">
			<property name="url" value="${validationURL}"/>
			<property name="file" value="${validationFile}"/>
			<property name="isUnpackedFile" value="${buildDirectory}/plugins/org.eclipse.emf.validation/META-INF/MANIFEST.MF"/>
		</ant>
		<ant target="getDependency" antfile="${buildDirectory}/../org.eclipse.modeling.common.releng/scripts/getDependencies.xml">
			<property name="url" value="${oclURL}"/>
			<property name="file" value="${oclFile}"/>
			<property name="isUnpackedFile" value="${buildDirectory}/plugins/org.eclipse.ocl/META-INF/MANIFEST.MF"/>
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the fetch -->
	<!-- ===================================================================== -->
	<target name="postFetch">
		<replace dir="${buildDirectory}/plugins" value="${timestamp}" token="@buildid@">
			<include name="**/about.mappings" />
		</replace>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating build scripts -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before assembling -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after assembling-->
	<!-- ===================================================================== -->
	<target name="postAssemble">
		<property name="massage.dir" value="${buildDirectory}/${buildLabel}/massageZIP"/>
		<patternset id="qtv-all-zip-contents">
			<include name="**/org.eclipse.emf.emfqtv.all*.jar"/>
			<include name="**/org.eclipse.emf.emfqtv.all*/**"/>
		</patternset>
		
		<!-- Strip out everything but the emf.qtv.all features from SDK zip -->
		<unzip src="${buildDirectory}/${buildLabel}/${sdkZipName}" dest="${massage.dir}">
			<patternset refid="qtv-all-zip-contents"/>
		</unzip>
		<zip basedir="${massage.dir}"
			destfile="${buildDirectory}/${buildLabel}/${sdkZipName}"
			update="false"/>
		<delete dir="${massage.dir}"/>
		
		<!-- Strip out everything but the emf.qtv.all features from Runtime zip -->
		<unzip src="${buildDirectory}/${buildLabel}/${rtZipName}" dest="${massage.dir}">
			<patternset refid="qtv-all-zip-contents"/>
		</unzip>
		<zip basedir="${massage.dir}"
			destfile="${buildDirectory}/${buildLabel}/${rtZipName}"
			update="false"/>
		<delete dir="${massage.dir}"/>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
		<replace dir="${buildDirectory}/plugins" value="${timestamp}" token="@build@">
			<include name="**/about.mappings" />
		</replace>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after everything is built and assembled -->
	<!-- (e.g., testing, posting, emailing, ...) -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="gatherLogs" />
	</target>

	<!-- ===================================================================== -->
	<!-- Helper targets -->
	<!-- ===================================================================== -->
	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>

		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features/org.eclipse.emf.emfqtv.all.sdk">
				<include name="*.log.zip" />
			</fileset>
		</unzip>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features/org.eclipse.emf.emfqtv.all">
				<include name="*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
